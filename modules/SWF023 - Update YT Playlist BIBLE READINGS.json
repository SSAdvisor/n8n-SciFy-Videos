{
  "nodes": [
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "WHICH_YT_CHANNEL"
            },
            {
              "name": "YT_Video_ID"
            },
            {
              "name": "channel_playlists",
              "type": "array"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -1312,
        -32
      ],
      "id": "a79b1595-22cb-4fcc-917d-7df297e5517d",
      "name": "Start"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "yeVBGOhJawGitSdM",
          "mode": "list",
          "cachedResultName": "Haves and Have Nots"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "list1": "={{ $('Playlists and Descriptions').first().json.channel_playlists }}",
            "list2": "={{ $(\"Get playlists\").all() }}",
            "YT_Video_ID": "={{ $('Start').first().json.YT_Video_ID }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "YT_Video_ID",
              "displayName": "YT_Video_ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "list1",
              "displayName": "list1",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "array"
            },
            {
              "id": "list2",
              "displayName": "list2",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "array"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -416,
        -16
      ],
      "id": "595d12c5-8154-4073-83ef-f27d3641f1c9",
      "name": "Haves and Have Nots"
    },
    {
      "parameters": {
        "resource": "playlist",
        "returnAll": true,
        "filters": {},
        "options": {}
      },
      "type": "n8n-nodes-base.youTube",
      "typeVersion": 1,
      "position": [
        -640,
        64
      ],
      "id": "af6a7310-855e-4681-a57d-26b41002c4f9",
      "name": "Get playlists",
      "credentials": {
        "youTubeOAuth2Api": {
          "id": "V25Sbr5zJwDV8L9o",
          "name": "YouTube Bible Readings"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "04c1a977-4ac5-49a8-86cc-24687e13edd0",
              "leftValue": "={{ $json.have_nots }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -192,
        -16
      ],
      "id": "6f7d7805-1bc5-4086-aa6b-0fa5c519558b",
      "name": "If have_nots is not empty"
    },
    {
      "parameters": {
        "fieldToSplitOut": "have_nots",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        32,
        -112
      ],
      "id": "e95dfa76-05f1-438b-ab5e-f09e6147874e",
      "name": "Get Playlist Items To Create"
    },
    {
      "parameters": {
        "fieldToSplitOut": "haves",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        32,
        96
      ],
      "id": "8cd201d9-6a4f-4264-bd29-9eb677ede8bb",
      "name": "Return Playlist Items with ID"
    },
    {
      "parameters": {
        "resource": "playlistItem",
        "playlistId": "={{ $json.lid }}",
        "videoId": "={{ $json.vid }}",
        "options": {}
      },
      "type": "n8n-nodes-base.youTube",
      "typeVersion": 1,
      "position": [
        256,
        96
      ],
      "id": "7db121ef-9ce6-45c3-981b-753763d4f08b",
      "name": "Add playlist item",
      "credentials": {
        "youTubeOAuth2Api": {
          "id": "V25Sbr5zJwDV8L9o",
          "name": "YouTube Bible Readings"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "3f218f0f-a520-419d-95a4-53a0e117deb2",
              "leftValue": "={{ $json.WHICH_YT_CHANNEL }}",
              "rightValue": "BIBLE READINGS",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1088,
        -32
      ],
      "id": "bbd4aef3-6172-4384-9f72-7be82de809b9",
      "name": "If wrong WHICH_YT_CHANNEL"
    },
    {
      "parameters": {
        "content": "# Update YT Playlist BIBLE READINGS\n## SWF023-4\n### Purpose\nAdd YT_Video_ID to the given channel_playlists.\n\n**NOTE:** ```When you duplicate this workflow you need to modify the credentials in the various nodes.```\n\n### Input\n* WHICH_YT_CHANNEL\n* YT_Video_ID\n* channel_playlists\n    * Array of playlists to add the YT_Video_ID to.\n\n### Output\n* YouTube JSON response",
        "height": 512,
        "width": 528
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1968,
        -224
      ],
      "id": "f6ebfcf9-aeee-4600-9af0-cd7173a271cf",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "errorMessage": "This workflow is only for BIBLE READINGS"
      },
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -864,
        -128
      ],
      "id": "1a7dac68-f3fb-41ea-b17b-bc5aa9586e14",
      "name": "Wrong Channel"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const playlists = $input.item.json.channel_playlists;\nconst channel_playlists = [];\nconst descriptions = Object.fromEntries(playlists);\nfor (let item in playlists){channel_playlists.push(playlists[item][0])}\nreturn {channel_playlists, descriptions}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -864,
        64
      ],
      "id": "5441e8d9-ff68-4655-8294-167c7316370f",
      "name": "Playlists and Descriptions"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const title = $input.item.json.title;\nconst descr = $(\"Playlists and Descriptions\").item.json.descriptions[title];\nreturn {title, description: descr}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        256,
        -112
      ],
      "id": "1b9f4361-a4dc-4c9a-88d1-e343e2bbbb80",
      "name": "Set title and description"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://www.googleapis.com/youtube/v3/playlists",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "youTubeOAuth2Api",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "part",
              "value": "snippet,status"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ \n{\n    \"snippet\": {\n      \"title\": $json.title,\n      \"description\": $json.description\n    },\n    \"status\": {\n      \"privacyStatus\": \"private\"\n    }\n}\n }}",
        "options": {
          "batching": {
            "batch": {
              "batchSize": 1,
              "batchInterval": 5000
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        480,
        64
      ],
      "id": "df440d9d-a4fb-4b80-86a8-27e60130bdbd",
      "name": "Create Playlists HTTP Request",
      "alwaysOutputData": true,
      "credentials": {
        "oAuth2Api": {
          "id": "CPm5IJNnNMeihvsD",
          "name": "YouTube Thumbnail Update"
        },
        "youTubeOAuth2Api": {
          "id": "V25Sbr5zJwDV8L9o",
          "name": "YouTube Bible Readings"
        }
      }
    },
    {
      "parameters": {
        "amount": 30
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        896,
        64
      ],
      "id": "47f26149-3221-450e-8895-0a41c10d00e2",
      "name": "Wait 30s",
      "webhookId": "17e61dab-0fef-4ad4-ab05-2b6fdddee48f"
    },
    {
      "parameters": {
        "fromEmail": "ssadvisor@seasonedsolutionsadvisor.com",
        "toEmail": "6142142693@tmomail.net",
        "subject": "Bible Readings YT Playlist Created",
        "emailFormat": "text",
        "text": "=YouTube Playlist ID: {{ $json.id }}\n\nTitle: {{ $json.snippet.title }}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        688,
        64
      ],
      "id": "d3466a00-3b57-48d9-8004-6f90703bc415",
      "name": "Send email",
      "webhookId": "30aba2ca-df9b-4d15-92da-f9bbd9a264c4",
      "credentials": {
        "smtp": {
          "id": "z30fnIDud6K6PjAL",
          "name": "SMTP ssadvisor@seasonedsolutionsadvisor.com"
        }
      }
    },
    {
      "parameters": {
        "content": "## PR5\n* Add sms notification of playlist creation.",
        "width": 512,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1968,
        304
      ],
      "id": "453e51b8-8ca2-4fea-940c-8d1b14e8650e",
      "name": "Sticky Note1"
    }
  ],
  "connections": {
    "Start": {
      "main": [
        [
          {
            "node": "If wrong WHICH_YT_CHANNEL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Haves and Have Nots": {
      "main": [
        [
          {
            "node": "If have_nots is not empty",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get playlists": {
      "main": [
        [
          {
            "node": "Haves and Have Nots",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If have_nots is not empty": {
      "main": [
        [
          {
            "node": "Get Playlist Items To Create",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Return Playlist Items with ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Playlist Items To Create": {
      "main": [
        [
          {
            "node": "Set title and description",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Return Playlist Items with ID": {
      "main": [
        [
          {
            "node": "Add playlist item",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If wrong WHICH_YT_CHANNEL": {
      "main": [
        [
          {
            "node": "Wrong Channel",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Playlists and Descriptions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Playlists and Descriptions": {
      "main": [
        [
          {
            "node": "Get playlists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set title and description": {
      "main": [
        [
          {
            "node": "Create Playlists HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Playlists HTTP Request": {
      "main": [
        [
          {
            "node": "Send email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 30s": {
      "main": [
        [
          {
            "node": "Get playlists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send email": {
      "main": [
        [
          {
            "node": "Wait 30s",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "37fe6d8c3b2aaeda95afa9d59c8cbc7c79e8171e6cc2a68043e239f8403c390e"
  }
}
