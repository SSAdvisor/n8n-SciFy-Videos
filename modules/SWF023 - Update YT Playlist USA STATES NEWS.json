{
  "nodes": [
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "WHICH_YT_CHANNEL"
            },
            {
              "name": "YT_Video_ID"
            },
            {
              "name": "channel_playlists",
              "type": "array"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -1312,
        -64
      ],
      "id": "f2b46007-046c-494a-ac55-6b640bcc5d70",
      "name": "Start"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "yeVBGOhJawGitSdM",
          "mode": "list",
          "cachedResultName": "Haves and Have Nots"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "list1": "={{ $('Start').first().json.channel_playlists }}",
            "list2": "={{ $('Get playlists').all() }}",
            "YT_Video_ID": "={{ $('Start').first().json.YT_Video_ID }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "YT_Video_ID",
              "displayName": "YT_Video_ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "list1",
              "displayName": "list1",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "array"
            },
            {
              "id": "list2",
              "displayName": "list2",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "array"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -640,
        64
      ],
      "id": "816c3aea-4b87-4fc8-a58f-5a4f8d96c2e0",
      "name": "Haves and Have Nots"
    },
    {
      "parameters": {
        "resource": "playlist",
        "filters": {},
        "options": {}
      },
      "type": "n8n-nodes-base.youTube",
      "typeVersion": 1,
      "position": [
        -864,
        64
      ],
      "id": "ffb05747-d067-4dca-8072-c50e1ceb54b5",
      "name": "Get playlists",
      "alwaysOutputData": true,
      "credentials": {
        "youTubeOAuth2Api": {
          "id": "LVJEczDTgSxHyFIc",
          "name": "YouTube USA_States_News"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "04c1a977-4ac5-49a8-86cc-24687e13edd0",
              "leftValue": "={{ $json.have_nots }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -416,
        64
      ],
      "id": "27d209c0-f809-4fac-a667-bb55e9ca73b7",
      "name": "If have_nots is not empty"
    },
    {
      "parameters": {
        "fieldToSplitOut": "have_nots",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -192,
        -32
      ],
      "id": "99fabfd0-a6bd-4e82-b37e-ddb12ef92ae1",
      "name": "Get Playlist Items To Create"
    },
    {
      "parameters": {
        "fieldToSplitOut": "haves",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -192,
        160
      ],
      "id": "d57afb8c-00fb-4da6-9455-20ebbe7a0a33",
      "name": "Return Playlist Items with ID"
    },
    {
      "parameters": {
        "resource": "playlistItem",
        "playlistId": "={{ $json.lid }}",
        "videoId": "={{ $json.vid }}",
        "options": {}
      },
      "type": "n8n-nodes-base.youTube",
      "typeVersion": 1,
      "position": [
        32,
        240
      ],
      "id": "b9251b63-4be3-46e1-923b-0246f7df61f6",
      "name": "Add playlist item",
      "credentials": {
        "youTubeOAuth2Api": {
          "id": "LVJEczDTgSxHyFIc",
          "name": "YouTube USA_States_News"
        }
      }
    },
    {
      "parameters": {
        "resource": "playlist",
        "operation": "create",
        "title": "={{ $json.title }}",
        "options": {
          "privacyStatus": "public"
        }
      },
      "type": "n8n-nodes-base.youTube",
      "typeVersion": 1,
      "position": [
        32,
        48
      ],
      "id": "436b7159-a7bf-48bf-8837-93fb86cca5e0",
      "name": "Create playlists",
      "credentials": {
        "youTubeOAuth2Api": {
          "id": "LVJEczDTgSxHyFIc",
          "name": "YouTube USA_States_News"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "3f218f0f-a520-419d-95a4-53a0e117deb2",
              "leftValue": "={{ $json.WHICH_YT_CHANNEL }}",
              "rightValue": "USA STATES NEWS",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1088,
        -64
      ],
      "id": "d711786b-e22d-4429-921a-03f7fe6b4bfc",
      "name": "If wrong WHICH_YT_CHANNEL"
    },
    {
      "parameters": {
        "content": "# Update YT Playlist USA STATES NEWS\n## SWF023-5\n### Purpose\nAdd YT_Video_ID to the given channel_playlists.\n\n**NOTE:** ```When you duplicate this workflow you need to modify the credentials in the various nodes.```\n\n### Input\n* WHICH_YT_CHANNEL\n* YT_Video_ID\n* channel_playlists\n    * Array of playlists to add the YT_Video_ID to.\n\n### Output\n* YouTube JSON response",
        "height": 512,
        "width": 416
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1840,
        -256
      ],
      "id": "f99eb688-87d6-41fc-b849-72ce3acfe821",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "errorMessage": "The parent has called the wrong WHICH_YT_CHANNEL"
      },
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -864,
        -128
      ],
      "id": "47aca3be-6d98-4f98-9f2d-7c6fa8447ae9",
      "name": "Wrong Channel"
    }
  ],
  "connections": {
    "Start": {
      "main": [
        [
          {
            "node": "If wrong WHICH_YT_CHANNEL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Haves and Have Nots": {
      "main": [
        [
          {
            "node": "If have_nots is not empty",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get playlists": {
      "main": [
        [
          {
            "node": "Haves and Have Nots",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If have_nots is not empty": {
      "main": [
        [
          {
            "node": "Get Playlist Items To Create",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Return Playlist Items with ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Playlist Items To Create": {
      "main": [
        [
          {
            "node": "Create playlists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Return Playlist Items with ID": {
      "main": [
        [
          {
            "node": "Add playlist item",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create playlists": {
      "main": [
        [
          {
            "node": "Get playlists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If wrong WHICH_YT_CHANNEL": {
      "main": [
        [
          {
            "node": "Wrong Channel",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get playlists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "37fe6d8c3b2aaeda95afa9d59c8cbc7c79e8171e6cc2a68043e239f8403c390e"
  }
}
