{
  "nodes": [
    {
      "parameters": {
        "url": "={{ $('Start').first().json.file_url }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        208,
        464
      ],
      "id": "b9ce0df8-12f0-48c8-9fd3-0b1141c4336e",
      "name": "Download File",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "file_url"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -16,
        464
      ],
      "id": "db8de76c-a2d1-471a-97fd-8203286fc943",
      "name": "Start"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6e84c894-daf1-4aee-9099-135a6560e0cb",
              "name": "file_url",
              "value": "={{ $('Start').first().json.file_url }}",
              "type": "string"
            },
            {
              "id": "1ce4879d-f20a-44e8-8306-a929fefe161f",
              "name": "download_status",
              "value": true,
              "type": "boolean"
            }
          ]
        },
        "includeOtherFields": true,
        "include": "selected",
        "includeFields": "data",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        432,
        272
      ],
      "id": "0d4b3bc2-4d23-40d0-8c31-c20185b14169",
      "name": "Return data"
    },
    {
      "parameters": {
        "content": "# Download File for given URL\n## SWF008\n### Purpose\nDownload a file from a given file_url.\n### Input\n* file_url\n    * the file to download.\n### Output\n* file_url\n* data\n    * the binary form of the file.\n### Future plans\n* Save the downloaded file to a temporary or permanent location.\n* If permanent\n    * create a directory of saved files.\n    * input the filename to save as.\n    * input a title/short desc for the directory\n    * input a long description for the directory",
        "height": 520,
        "width": 540
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -288,
        -304
      ],
      "id": "e64ce207-2cfa-4a61-9bea-de7bd1f661ee",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "errorMessage": "={{ $('Download File').first().json.error.message }}"
      },
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        880,
        544
      ],
      "id": "183d4f0d-a6c1-47cd-b718-bdcef578d4ea",
      "name": "Stop and Error"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "eb283a4a-541b-454b-ba65-ea2b0b722b04",
              "leftValue": "={{ $json.retry }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        656,
        544
      ],
      "id": "5dc184e6-89bb-4175-8a2d-1c077d9db1f1",
      "name": "If Retry"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "Zy23SQ1NqBBCmVwM",
          "mode": "list",
          "cachedResultName": "HTTP Request Error Management"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "E429_wait_seconds": 5.01,
            "E500_wait_seconds": 60,
            "status": "={{ $json.error.status }}",
            "code": "={{ $json.error.code }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number"
            },
            {
              "id": "code",
              "displayName": "code",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "E429_wait_seconds",
              "displayName": "E429_wait_seconds",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number"
            },
            {
              "id": "E500_wait_seconds",
              "displayName": "E500_wait_seconds",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        432,
        464
      ],
      "id": "1084d3a2-6313-4f50-a005-07b10b0a0d96",
      "name": "HTTP Request Error Management"
    }
  ],
  "connections": {
    "Download File": {
      "main": [
        [
          {
            "node": "Return data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request Error Management",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start": {
      "main": [
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Retry": {
      "main": [
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop and Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request Error Management": {
      "main": [
        [
          {
            "node": "If Retry",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {
    "Start": [
      {
        "file_url": "https://xeontunnel.zero2launch.com/static/videos/58ab8007-2d85-4241-9bbd-896c3a419fc5.mp4"
      }
    ]
  },
  "meta": {
    "instanceId": "37fe6d8c3b2aaeda95afa9d59c8cbc7c79e8171e6cc2a68043e239f8403c390e"
  }
}
